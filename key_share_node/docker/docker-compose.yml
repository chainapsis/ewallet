services:
  key_share_node_pg:
    image: postgres:17.4
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: "UTC"
      PGTZ: "UTC"
    volumes:
      - ${PG_DATA_DIR}:/var/lib/postgresql/data
      - ../../key_share_node/pg_interface/scripts/migrate/migrate.sql:/docker-entrypoint-initdb.d/migrate.sql

  key_share_node:
    build:
      context: ../../
      dockerfile: key_share_node/docker/key_share_node.Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    platform: linux/amd64
    restart: unless-stopped
    environment:
      PORT: ${SERVER_PORT}
      DB_HOST: "key_share_node_pg"
      DB_PORT: "5432"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSL: "false"
      # Path inside the container where the Docker secret is mounted
      ENCRYPTION_SECRET_PATH: "/run/secrets/encryption_secret"
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      # Container path is fixed for consistency; you may change the host path in the volume mapping
      DUMP_DIR: /home/node/key_share_node/dump

    volumes:
      - ${DUMP_DIR}:/home/node/key_share_node/dump
      - ${LOG_DIR}:/home/node/key_share_node/key_share_node/server/log_data
    secrets:
      - encryption_secret
    depends_on:
      - key_share_node_pg
    command: >
      sh -c '[ "${RESET_DB}" = "true" ] && yarn start --reset-db || yarn start'

secrets:
  encryption_secret:
    file: ${ENCRYPTION_SECRET_FILE_PATH}
